def man_alg(text):
    # Преобразуем текст, добавляя символ "#" между всеми символами и в начале\конце
    changed_text = "#" + "#".join(text) + "#"

    n = len(changed_text)  # Длина измененного текста
    p = [0] * n  # Массив для хранения радиусов палиндромов
    middle = 0  # Центральная позиция текущего палиндрома
    right = 0  # Правая граница текущего палиндрома

    # Проходим по всем символам измененного текста
    for i in range(n):
        mirror = 2 * middle - i  # Находим зеркальную позицию для текущего символа

        # Если текущая позиция находится внутри правой границы,
        # устанавливаем начальный радиус из зеркальной позиции
        if i < right:
            p[i] = min(right - i, p[mirror])

        # Расширяем палиндром, пока условие выполняется
        while i + p[i] + 1 < n and i - p[i] - 1 >= 0 and \
                changed_text[i + p[i] + 1] == changed_text[i - p[i] - 1]:
            p[i] += 1

        # Если мы расширились за правую границу, обновляем middle и right
        if i + p[i] > right:
            middle = i
            right = i + p[i]

    return p[1::2]  # Возвращаем массив радиусов палиндромов, исключая символы "#"

text = input()
res = man_alg(text)

print(*res)
